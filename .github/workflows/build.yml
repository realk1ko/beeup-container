name: Build

on:
  workflow_call:
    inputs:
      base_image:
        type: string
        required: true
      image_name:
        type: string
        required: true
      tags:
        type: string
        required: true
      platforms:
        type: string
        required: true
      wine_version:
        type: string
        required: true
      beeup_download_url:
        type: string
        required: true
    secrets:
      username:
        required: true
      token:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.username }}
          password: ${{ secrets.token }}

      - name: Download Bee-Up
        shell: bash
        run: |
          set -euo pipefail
          
          curl -o ./container/home/app/installer.zip ${{ inputs.beeup_download_url }}
          
          unzip ./container/home/app/installer.zip -d ./container/home/app/installer
          rm -f ./container/home/app/installer.zip
          mv ./container/home/app/installer/*/* ./container/home/app/installer
          
          unzip ./container/home/app/installer/install-support/*.zip -d ./container/home/app/installer/install-support/app 
          rm -f ./container/home/app/installer/install-support/*.zip

      - name: Prepare tags
        id: prepare-tags
        shell: bash
        run: |
          set -euo pipefail
          
          tags=""
          
          IFS="," read -ra partial_tags <<< "${{ inputs.tags }}"
          
          for partial_tag in "${partial_tags[@]}"; do
            tags+="ghcr.io/${{ secrets.username }}/${{ inputs.image_name }}:${partial_tag},"
          done
          
          echo "tags=${tags}" >> $GITHUB_OUTPUT

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          platforms: ${{ inputs.platforms }}
          build-args: |
            BASE_IMAGE=${{ inputs.base_image }}
            WINE_VERSION=${{ inputs.wine_version }}
          tags: ${{ steps.prepare-tags.outputs.tags }}
